GraphicsPipeline(
	render_states: (
		cull_mode: [Back]
	),

	depth_stencil_states: (
		depth_test: true,
		depth_write: true,
		depth_compare: Less,
	),

	constants: {
		"camera": [
			("view", Matrix4),
		],
		"imports": [
			("world", Matrix4),
		],
	},

	vertex_shader: (
		attributes: [
			("position",  Vector3),
			("normal",    Vector3),
			("tangent",   Vector3),
			("bitangent", Vector3),
			("uv0",       Vector2),
			("uv1",       Vector2),
		],

		exports: [
			("uv",         Vector2),
		],

		code: r#"
			Imports imports = get_imports();
			Camera camera = get_camera();

			output.position = mul(camera.view, mul(imports.world, float4(input.position, 1.0)));
			output.uv = input.uv0;

			return output;
		"#,
	),

	pixel_shader: (
		exports: [
			("color", RGBA_U8)
		],

		code: r#"
			output.color = float4(input.uv.x, input.uv.y, 0.0, 1.0);
			
			return output;
		"#
	),
)